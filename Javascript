// Smooth scrolling for navigation links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        
        const targetId = this.getAttribute('href');
        if (targetId === '#') return;
        
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
            window.scrollTo({
                top: targetElement.offsetTop - 80,
                behavior: 'smooth'
            });
            
            // Close mobile menu if open
            document.querySelector('.nav-links').classList.remove('active');
        }
    });
});

// Mobile menu toggle
document.querySelector('.menu-btn').addEventListener('click', function() {
    document.querySelector('.nav-links').classList.toggle('active');
});

// Header background change on scroll
window.addEventListener('scroll', function() {
    const header = document.querySelector('header');
    if (window.scrollY > 50) {
        header.style.background = 'rgba(255, 255, 255, 0.95)';
        header.style.boxShadow = '0 5px 20px rgba(0, 0, 0, 0.1)';
    } else {
        header.style.background = 'rgba(255, 255, 255, 0.9)';
        header.style.boxShadow = '0 5px 20px rgba(0, 0, 0, 0.1)';
    }
});

// Form submission handling
document.getElementById('contactForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    // Get form values
    const name = document.getElementById('name').value;
    const email = document.getElementById('email').value;
    const message = document.getElementById('message').value;
    
    // Simple validation
    if (!name || !email || !message) {
        alert('Please fill in all fields');
        return;
    }
    
    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
        alert('Please enter a valid email address');
        return;
    }
    
    // In a real application, you would send the form data to a server here
    // For this example, we'll just show a success message
    alert(`Thank you for your message, ${name}! We'll get back to you soon.`);
    
    // Reset form
    this.reset();
});

// Animation on scroll
const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.1
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('animate');
        }
    });
}, observerOptions);

document.querySelectorAll('.skill, .project, .contact-card').forEach(el => {
    observer.observe(el);
});

// Create additional floating flowers
function createFloatingFlowers() {
    const flowersContainer = document.querySelector('.floating-flowers');
    const numFlowers = 10;
    
    for (let i = 0; i < numFlowers; i++) {
        const flower = document.createElement('div');
        flower.classList.add('flower');
        
        // Random position
        const left = Math.random() * 100;
        const top = Math.random() * 100;
        
        // Random size
        const size = 20 + Math.random() * 60;
        
        // Random animation duration
        const duration = 10 + Math.random() * 20;
        
        // Random delay
        const delay = Math.random() * 5;
        
        flower.style.left = `${left}%`;
        flower.style.top = `${top}%`;
        flower.style.width = `${size}px`;
        flower.style.height = `${size}px`;
        flower.style.animationDuration = `${duration}s`;
        flower.style.animationDelay = `${delay}s`;
        
        flowersContainer.appendChild(flower);
    }
}

// Initialize floating flowers
createFloatingFlowers();
